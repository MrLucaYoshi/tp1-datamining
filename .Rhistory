hist
hist(mydata[,1])
setwd("~/HEG/S5")
dataIris = read.table(file="iris.csv",header=TRUE)
dataIris = read.table(file="iris.csv",header=TRUE, sep=",")
hist(dataIris[,1])
hist(dataIris[,4])
hist(dataIris[,2])
hist(dataIris[,3])
hist(dataIris[,5])
hist(dataIris[,1])
mSetosa<-colMeans(myData[myData[,5]=="Iris_setosa,1:4"])
mSetosa<-colMeans(dataIris[dataIris[,5]=="Iris_setosa,1:4"])
mVersi<-colMeans(dataIris[dataIris[,5]=="Iris_versicolor,1:4"])
abs(mSetosa - mVersi)/diag(var(dataIris))
abs(mSetosa - mVersi)/diag(var(dataIris[1,4]))
abs(mSetosa - mVersi)/diag(var(dataIris[,1:4]))
abs(mSetosa - mVersi)/sqrt(diag(var(dataIris[,1:4])))
abs(mSetosa - mVersi)/sqrt(diag(var(dataIris[,1:4])))
hist(mSetosa)
mSetosa
mSetosa[,]
mSetosa[,1]
mSetosa<-colMeans(dataIris[dataIris[,5]=="Iris_setosa",1:4])
mSetosa[,]
mSetosa<-colMeans(dataIris[dataIris[,5]=="Iris_setosa",1:4])
mSetosa
mVersi<-colMeans(dataIris[dataIris[,5]=="Iris_versicolor",1:4])
abs(mSetosa - mVersi)/sqrt(diag(var(dataIris[,1:4])))
hist(abs(mSetosa - mVersi)/sqrt(diag(var(dataIris[,1:4]))))
prop.table(abs(mSetosa - mVersi)/sqrt(diag(var(dataIris[,1:4]))))
his(dataIris[dataIris[,5]=="Iris_versicolor",2])
hist(dataIris[dataIris[,5]=="Iris_versicolor",2])
hist(dataIris[dataIris[,5]=="Iris_setosa",2])
hist(dataIris[dataIris[,5]=="Iris_versicolor",2])
hist(dataIris[dataIris[,5]=="Iris_setosa",2])
window()
windows()
hist(dataIris[dataIris[,5]=="Iris_versicolor",2])
windows()
hist(dataIris[dataIris[,5]=="Iris_setosa",2])
hist(mSetosa[,2])
hist(mSetosa[,])
hist(mSetosa)
source()
source(script.R)
source("script.R")
source("script.R")
source("script.R")
source("script.R")
script(dataIris,1,1)
AttributeImportance(dataIris,1,1)
setwd("~/GitHub/DMTP01/tp1-datamining")
probabilityDistribution <- function(data, attribute)  {
barplot(prop.table(table(data[,attribute])),main = names(data)[attribute])
}
runAnalysis <- function(fileName, discretes, attToRemove, classId) {
data <- read.table(file=fileName, header=TRUE, sep=",")
for(d in c(1:length(data))){
if(!is.element(d,attToRemove)){
if(is.element(d,discretes)){
#Discretes
#P(att)
windows()
probabilityDistribution(data,d)
contTable<-table(data[,d],data[,classId])
#P(target|att)
windows()
barplot(prop.table(contTable),
main="Distribution target",
col=c("blue","red","orange","yellow","purple","darkblue","black","white","pink","green"),
legend=TRUE,
xlab = "Revenue",
ylab = names(data)[d],
xlim=c(0,10),
ylim=c(0,15)
)
}else{
#Continuous
#
print(names(data)[d])
print(paste("Moyenne :",mean(data[,d]),sep = " "))
print(paste("variance :",var(data[,d]),sep = " "))
#(target|att)
}
}
}
}
runAnalysis("online_shoppers_intention.csv",c(1,3,5,10,11,12,13,14,15,16,17,18),c(12,13),18)
runAnalysis <- function(fileName, discretes, attToRemove, classId) {
data <- read.table(file=fileName, header=TRUE, sep=",")
for(d in c(1:length(data))){
if(!is.element(d,attToRemove)){
if(is.element(d,discretes)){
#Discretes
#P(att)
windows()
probabilityDistribution(data,d)
contTable<-table(data[,d],data[,classId])
#P(target|att)
windows()
barplot(prop.table(contTable),
main="Distribution target",
col=c("blue","red","orange","yellow","purple","darkblue","black","white","pink","green"),
legend=TRUE,
xlab = "Revenue",
ylab = names(data)[d],
xlim=c(0,200),
ylim=c(0,200)
)
}else{
#Continuous
#
print(names(data)[d])
print(paste("Moyenne :",mean(data[,d]),sep = " "))
print(paste("variance :",var(data[,d]),sep = " "))
#(target|att)
}
}
}
}
runAnalysis("online_shoppers_intention.csv",c(1,3,5,10,11,12,13,14,15,16,17,18),c(12,13),18)
runAnalysis("online_shoppers_intention.csv",c(1,3,5,10,11,12,13,14,15,16,17),c(),18)
probabilityDistribution <- function(data, attribute)  {
barplot(prop.table(table(data[,attribute])),main = names(data)[attribute])
}
runAnalysis <- function(fileName, discretes, attToRemove, classId) {
data <- read.table(file=fileName, header=TRUE, sep=",")
for(d in c(1:length(data))){
if(!is.element(d,attToRemove)){
if(is.element(d,discretes)){
#Discretes
#P(att)
windows()
probabilityDistribution(data,d)
contTable<-table(data[,d],data[,classId])
#P(target|att)
windows()
barplot(prop.table(contTable),
main="Distribution target",
col=c("blue","red","orange","yellow","purple","darkblue","black","white","pink","green"),
legend=TRUE,
xlab = "Revenue",
ylab = names(data)[d]
)
}else{
#Continuous
#
print(names(data)[d])
print(paste("Moyenne :",mean(data[,d]),sep = " "))
print(paste("variance :",var(data[,d]),sep = " "))
#(target|att)
}
}
}
}
runAnalysis("online_shoppers_intention.csv",c(1,3,5,10,11,12,13,14,15,16,17),c(),18)
runAnalysis("online_shoppers_intention.csv",c(1,3,5,10,11,12,13,14,15,16,17),c(),18)
runAnalysis("online_shoppers_intention.csv",c(1,3,5,10,11,12,13,14,15,16,17),c(),18)
hist()
colMeans(data[,-attToRemove-discretes])
runAnalysis <- function(fileName, discretes, attToRemove, classId) {
data <- read.table(file=fileName, header=TRUE, sep=",")
colMeans(data[,-attToRemove-discretes-classId])
}
runAnalysis("online_shoppers_intention.csv",c(1,3,5,10,11,12,13,14,15,16,17),c(),18)
runAnalysis <- function(fileName, discretes, attToRemove, classId) {
data <- read.table(file=fileName, header=TRUE, sep=",")
colMeans(data[,-c(attToRemove,discretes,classId)])
}
runAnalysis("online_shoppers_intention.csv",c(1,3,5,10,11,12,13,14,15,16,17),c(),18)
runAnalysis <- function(fileName, discretes, attToRemove, classId) {
data <- read.table(file=fileName, header=TRUE, sep=",")
hist(colMeans(data[,-c(attToRemove,discretes,classId)]))
}
runAnalysis("online_shoppers_intention.csv",c(1,3,5,10,11,12,13,14,15,16,17),c(),18)
colVars
colVars()
colVars <- function(x, na.rm=FALSE, dims=1, unbiased=TRUE, SumSquares=FALSE,
twopass=FALSE) {
if (SumSquares) return(colSums(x^2, na.rm, dims))
N <- colSums(!is.na(x), FALSE, dims)
Nm1 <- if (unbiased) N-1 else N
if (twopass) {x <- if (dims==length(dim(x))) x - mean(x, na.rm=na.rm) else
sweep(x, (dims+1):length(dim(x)), colMeans(x,na.rm,dims))}
(colSums(x^2, na.rm, dims) - colSums(x, na.rm, dims)^2/N) / Nm1
}
colVars(data[,-c(attToRemove,discretes,classId)])
colVars(data[,-c(1,3,5,7,10)])
data
data
data[]
print(colMeans(data[,-c(c(12,13),c(1,3,5,10,11,12,13,14,15,16,17),18)]))
colMeans(data[,-c(c(12,13),c(1,3,5,10,11,12,13,14,15,16,17),18)])
